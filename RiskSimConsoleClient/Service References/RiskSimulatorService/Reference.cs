//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RiskSimConsoleClient.RiskSimulatorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArmyComposition", Namespace="http://schemas.datacontract.org/2004/07/RiskSimLib")]
    [System.SerializableAttribute()]
    public partial class ArmyComposition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte AllModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte HighestModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte LowestModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte AllModifier {
            get {
                return this.AllModifierField;
            }
            set {
                if ((this.AllModifierField.Equals(value) != true)) {
                    this.AllModifierField = value;
                    this.RaisePropertyChanged("AllModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte HighestModifier {
            get {
                return this.HighestModifierField;
            }
            set {
                if ((this.HighestModifierField.Equals(value) != true)) {
                    this.HighestModifierField = value;
                    this.RaisePropertyChanged("HighestModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte LowestModifier {
            get {
                return this.LowestModifierField;
            }
            set {
                if ((this.LowestModifierField.Equals(value) != true)) {
                    this.LowestModifierField = value;
                    this.RaisePropertyChanged("LowestModifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttackResult", Namespace="http://schemas.datacontract.org/2004/07/RiskSimLib")]
    [System.SerializableAttribute()]
    public partial class AttackResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<short, double> AllOutcomeChancesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RiskSimConsoleClient.RiskSimulatorService.ArmyComposition AttackingArmyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RiskSimConsoleClient.RiskSimulatorService.ArmyComposition DefendingArmyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SuccessChanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint TrialsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<short, double> AllOutcomeChances {
            get {
                return this.AllOutcomeChancesField;
            }
            set {
                if ((object.ReferenceEquals(this.AllOutcomeChancesField, value) != true)) {
                    this.AllOutcomeChancesField = value;
                    this.RaisePropertyChanged("AllOutcomeChances");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RiskSimConsoleClient.RiskSimulatorService.ArmyComposition AttackingArmy {
            get {
                return this.AttackingArmyField;
            }
            set {
                if ((object.ReferenceEquals(this.AttackingArmyField, value) != true)) {
                    this.AttackingArmyField = value;
                    this.RaisePropertyChanged("AttackingArmy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RiskSimConsoleClient.RiskSimulatorService.ArmyComposition DefendingArmy {
            get {
                return this.DefendingArmyField;
            }
            set {
                if ((object.ReferenceEquals(this.DefendingArmyField, value) != true)) {
                    this.DefendingArmyField = value;
                    this.RaisePropertyChanged("DefendingArmy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SuccessChance {
            get {
                return this.SuccessChanceField;
            }
            set {
                if ((this.SuccessChanceField.Equals(value) != true)) {
                    this.SuccessChanceField = value;
                    this.RaisePropertyChanged("SuccessChance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Trials {
            get {
                return this.TrialsField;
            }
            set {
                if ((this.TrialsField.Equals(value) != true)) {
                    this.TrialsField = value;
                    this.RaisePropertyChanged("Trials");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RiskSimulatorService.IRiskSimulator")]
    public interface IRiskSimulator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskSimulator/SimulateAttack", ReplyAction="http://tempuri.org/IRiskSimulator/SimulateAttackResponse")]
        RiskSimConsoleClient.RiskSimulatorService.AttackResult SimulateAttack(RiskSimConsoleClient.RiskSimulatorService.ArmyComposition attackingForce, RiskSimConsoleClient.RiskSimulatorService.ArmyComposition defendingForce, uint trials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskSimulator/SimulateAttack", ReplyAction="http://tempuri.org/IRiskSimulator/SimulateAttackResponse")]
        System.Threading.Tasks.Task<RiskSimConsoleClient.RiskSimulatorService.AttackResult> SimulateAttackAsync(RiskSimConsoleClient.RiskSimulatorService.ArmyComposition attackingForce, RiskSimConsoleClient.RiskSimulatorService.ArmyComposition defendingForce, uint trials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskSimulator/GetServiceName", ReplyAction="http://tempuri.org/IRiskSimulator/GetServiceNameResponse")]
        string GetServiceName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskSimulator/GetServiceName", ReplyAction="http://tempuri.org/IRiskSimulator/GetServiceNameResponse")]
        System.Threading.Tasks.Task<string> GetServiceNameAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRiskSimulatorChannel : RiskSimConsoleClient.RiskSimulatorService.IRiskSimulator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RiskSimulatorClient : System.ServiceModel.ClientBase<RiskSimConsoleClient.RiskSimulatorService.IRiskSimulator>, RiskSimConsoleClient.RiskSimulatorService.IRiskSimulator {
        
        public RiskSimulatorClient() {
        }
        
        public RiskSimulatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RiskSimulatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RiskSimulatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RiskSimulatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RiskSimConsoleClient.RiskSimulatorService.AttackResult SimulateAttack(RiskSimConsoleClient.RiskSimulatorService.ArmyComposition attackingForce, RiskSimConsoleClient.RiskSimulatorService.ArmyComposition defendingForce, uint trials) {
            return base.Channel.SimulateAttack(attackingForce, defendingForce, trials);
        }
        
        public System.Threading.Tasks.Task<RiskSimConsoleClient.RiskSimulatorService.AttackResult> SimulateAttackAsync(RiskSimConsoleClient.RiskSimulatorService.ArmyComposition attackingForce, RiskSimConsoleClient.RiskSimulatorService.ArmyComposition defendingForce, uint trials) {
            return base.Channel.SimulateAttackAsync(attackingForce, defendingForce, trials);
        }
        
        public string GetServiceName() {
            return base.Channel.GetServiceName();
        }
        
        public System.Threading.Tasks.Task<string> GetServiceNameAsync() {
            return base.Channel.GetServiceNameAsync();
        }
    }
}
