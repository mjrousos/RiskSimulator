//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RiskSimulatorService
{
    using System.Runtime.Serialization;
    using RiskSim.Models;

    /*    
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ArmyComposition", Namespace="http://schemas.datacontract.org/2004/07/RiskSimLib")]
        public partial class ArmyComposition : object
        {

            private sbyte AllModifierField;

            private sbyte HighestModifierField;

            private sbyte LowestModifierField;

            private short SizeField;

            [System.Runtime.Serialization.DataMemberAttribute()]
            public sbyte AllModifier
            {
                get
                {
                    return this.AllModifierField;
                }
                set
                {
                    this.AllModifierField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public sbyte HighestModifier
            {
                get
                {
                    return this.HighestModifierField;
                }
                set
                {
                    this.HighestModifierField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public sbyte LowestModifier
            {
                get
                {
                    return this.LowestModifierField;
                }
                set
                {
                    this.LowestModifierField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public short Size
            {
                get
                {
                    return this.SizeField;
                }
                set
                {
                    this.SizeField = value;
                }
            }
        }

        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="AttackResult", Namespace="http://schemas.datacontract.org/2004/07/RiskSimLib")]
        public partial class AttackResult : object
        {

            private System.Collections.Generic.Dictionary<short, double> AllOutcomeChancesField;

            private RiskSimulatorService.ArmyComposition AttackingArmyField;

            private RiskSimulatorService.ArmyComposition DefendingArmyField;

            private double SuccessChanceField;

            private uint TrialsField;

            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Collections.Generic.Dictionary<short, double> AllOutcomeChances
            {
                get
                {
                    return this.AllOutcomeChancesField;
                }
                set
                {
                    this.AllOutcomeChancesField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public RiskSimulatorService.ArmyComposition AttackingArmy
            {
                get
                {
                    return this.AttackingArmyField;
                }
                set
                {
                    this.AttackingArmyField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public RiskSimulatorService.ArmyComposition DefendingArmy
            {
                get
                {
                    return this.DefendingArmyField;
                }
                set
                {
                    this.DefendingArmyField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public double SuccessChance
            {
                get
                {
                    return this.SuccessChanceField;
                }
                set
                {
                    this.SuccessChanceField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public uint Trials
            {
                get
                {
                    return this.TrialsField;
                }
                set
                {
                    this.TrialsField = value;
                }
            }
        }
    */

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "RiskSimulatorService.IRiskSimulator")]
    public interface IRiskSimulator
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRiskSimulator/SimulateAttack", ReplyAction = "http://tempuri.org/IRiskSimulator/SimulateAttackResponse")]
        System.Threading.Tasks.Task<AttackResult> SimulateAttackAsync(ArmyComposition attackingForce, ArmyComposition defendingForce, uint trials);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IRiskSimulator/GetServiceName", ReplyAction = "http://tempuri.org/IRiskSimulator/GetServiceNameResponse")]
        System.Threading.Tasks.Task<string> GetServiceNameAsync();
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRiskSimulatorChannel : RiskSimulatorService.IRiskSimulator, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RiskSimulatorClient : System.ServiceModel.ClientBase<RiskSimulatorService.IRiskSimulator>, RiskSimulatorService.IRiskSimulator
    {

        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);

        public RiskSimulatorClient() :
                base(RiskSimulatorClient.GetDefaultBinding(), RiskSimulatorClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IRiskSimulator.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public RiskSimulatorClient(EndpointConfiguration endpointConfiguration) :
                base(RiskSimulatorClient.GetBindingForEndpoint(endpointConfiguration), RiskSimulatorClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public RiskSimulatorClient(EndpointConfiguration endpointConfiguration, string remoteAddress) :
                base(RiskSimulatorClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public RiskSimulatorClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) :
                base(RiskSimulatorClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public RiskSimulatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public System.Threading.Tasks.Task<AttackResult> SimulateAttackAsync(ArmyComposition attackingForce, ArmyComposition defendingForce, uint trials)
        {
            return base.Channel.SimulateAttackAsync(attackingForce, defendingForce, trials);
        }

        public System.Threading.Tasks.Task<string> GetServiceNameAsync()
        {
            return base.Channel.GetServiceNameAsync();
        }

        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }

        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }

        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRiskSimulator))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("\"Cannot find endpoint with name \'{0}\'.\"", endpointConfiguration));
        }

        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRiskSimulator))
            {
                //                return new System.ServiceModel.EndpointAddress("http://risksimservice.azurewebsites.net/RiskSimulator.svc/BasicHttp");
                return new System.ServiceModel.EndpointAddress("http://localhost:48172/RiskSimulator.svc/BasicHttp");
            }
            throw new System.InvalidOperationException(string.Format("\"Cannot find endpoint with name \'{0}\'.\"", endpointConfiguration));
        }

        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return RiskSimulatorClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IRiskSimulator);
        }

        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return RiskSimulatorClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IRiskSimulator);
        }

        public enum EndpointConfiguration
        {

            BasicHttpBinding_IRiskSimulator,
        }
    }
}
